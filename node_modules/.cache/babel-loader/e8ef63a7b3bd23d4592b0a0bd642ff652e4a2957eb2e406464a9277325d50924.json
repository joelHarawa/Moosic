{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nconst SearchFunction = () => {\n  _s();\n  const [userID, setUserID] = useState(\"\");\n  const token = window.localStorage.getItem(\"token\");\n  const trackURI = 'https://open.spotify.com/track/6DCZcSspjsKoFjzjrWoCdn?si=10a941887a914fba';\n  useEffect(() => {\n    if (token) {\n      fetch(\"https://api.spotify.com/v1/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        setUserID(data.id);\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  }, [token]);\n  const playlistData = {\n    name: \"My Mood Playlist\",\n    description: \"A playlist based on my current mood\",\n    public: false\n  };\n  fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(playlistData)\n  }).then(response => response.json()).then(data => {\n    console.log('Playlist created:', data);\n    fetch(`https://api.spotify.com/v1/playlists/${data.id}/tracks?uris=${trackURI}`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Track added to playlist:', data);\n      // Handle the track addition response\n    }).catch(error => {\n      console.error('Error adding track to playlist:', error);\n      // Handle errors\n    });\n    // Handle the playlist creation response\n  }).catch(error => {\n    console.error('Error creating playlist:', error);\n    // Handle errors\n  });\n};\n_s(SearchFunction, \"ps9qAbFP5yPScFAAZBy2CvL3+YY=\");\n_c = SearchFunction;\nexport default SearchFunction;\nvar _c;\n$RefreshReg$(_c, \"SearchFunction\");","map":{"version":3,"names":["React","useEffect","useState","SearchFunction","_s","userID","setUserID","token","window","localStorage","getItem","trackURI","fetch","headers","Authorization","then","response","json","data","id","catch","error","console","playlistData","name","description","public","method","body","JSON","stringify","log","accessToken","_c","$RefreshReg$"],"sources":["C:/Users/Joel/WebstormProjects/Moosic/client/src/components/SearchFunction.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nconst SearchFunction = () => {\r\n    const [userID, setUserID] = useState(\"\");\r\n    const token = window.localStorage.getItem(\"token\");\r\n\r\n    const trackURI = 'https://open.spotify.com/track/6DCZcSspjsKoFjzjrWoCdn?si=10a941887a914fba';\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetch(\"https://api.spotify.com/v1/me\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    setUserID(data.id);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching user data:\", error);\r\n                })\r\n        }\r\n    }, [token]);\r\n\r\n\r\n    const playlistData = {\r\n        name: \"My Mood Playlist\",\r\n        description: \"A playlist based on my current mood\",\r\n        public: false\r\n    }\r\n\r\n    fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(playlistData)\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log('Playlist created:', data);\r\n\r\n            fetch(`https://api.spotify.com/v1/playlists/${data.id}/tracks?uris=${trackURI}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log('Track added to playlist:', data);\r\n                    // Handle the track addition response\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error adding track to playlist:', error);\r\n                    // Handle errors\r\n                });\r\n            // Handle the playlist creation response\r\n        })\r\n\r\n\r\n        .catch(error => {\r\n            console.error('Error creating playlist:', error);\r\n            // Handle errors\r\n        });\r\n}\r\n\r\nexport default SearchFunction;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMK,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAElD,MAAMC,QAAQ,GAAG,2EAA2E;EAG5FV,SAAS,CAAC,MAAM;IACZ,IAAIM,KAAK,EAAE;MACPK,KAAK,CAAC,+BAA+B,EAAE;QACnCC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASP,KAAM;QACnC;MACJ,CAAC,CAAC,CACGQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACZZ,SAAS,CAACY,IAAI,CAACC,EAAE,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAGX,MAAMgB,YAAY,GAAG;IACjBC,IAAI,EAAE,kBAAkB;IACxBC,WAAW,EAAE,qCAAqC;IAClDC,MAAM,EAAE;EACZ,CAAC;EAEDd,KAAK,CAAE,oCAAmCP,MAAO,YAAW,EAAE;IAC1DsB,MAAM,EAAE,MAAM;IACdd,OAAO,EAAE;MACLC,aAAa,EAAG,UAASP,KAAM,EAAC;MAChC,cAAc,EAAE;IACpB,CAAC;IACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,YAAY;EACrC,CAAC,CAAC,CACGR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACVI,OAAO,CAACS,GAAG,CAAC,mBAAmB,EAAEb,IAAI,CAAC;IAEtCN,KAAK,CAAE,wCAAuCM,IAAI,CAACC,EAAG,gBAAeR,QAAS,EAAC,EAAE;MAC7EgB,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE;QACLC,aAAa,EAAG,UAASkB,WAAY;MACzC;IACJ,CAAC,CAAC,CACGjB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVI,OAAO,CAACS,GAAG,CAAC,0BAA0B,EAAEb,IAAI,CAAC;MAC7C;IACJ,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,CAGDD,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC,CAAC;AACV,CAAC;AAAAjB,EAAA,CAlEKD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAoEpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}