{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel\\\\WebstormProjects\\\\Moosic\\\\client\\\\src\\\\components\\\\SearchMood.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moodCategories = [\"Happy\", \"Angsty\", \"Energetic\", \"Relaxed\", \"Sad\"];\nconst SearchBox = () => {\n  _s();\n  const [selectedMood, setSelectedMood] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    if (selectedMood) {\n      // Perform the search based on the selectedMood\n      // You can use the selectedMood to filter or search for specific songs or playlists related to that mood\n      // Example: Perform an API request using the selectedMood as a query parameter\n      axios.get(`https://api.spotify.com/v1/search?q=${selectedMood}&type=track`).then(response => {\n        setSearchResults(response.data.tracks.items);\n      }).catch(error => {\n        console.error(\"Error fetching search results:\", error);\n      });\n    } else {\n      setSearchResults([]);\n    }\n  }, [selectedMood]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a mood\",\n      value: selectedMood,\n      onChange: e => setSelectedMood(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), selectedMood && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-item\",\n        children: result.name\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-categories\",\n      children: moodCategories.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedMood(mood),\n        className: selectedMood === mood ? \"selected\" : \"\",\n        children: mood\n      }, mood, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBox, \"QrhPdzZxDVEAguh2/Zh/HP+aD2w=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","moodCategories","SearchBox","_s","selectedMood","setSelectedMood","searchResults","setSearchResults","get","then","response","data","tracks","items","catch","error","console","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","className","map","result","name","id","mood","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Joel/WebstormProjects/Moosic/client/src/components/SearchMood.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst moodCategories = [\"Happy\", \"Angsty\", \"Energetic\", \"Relaxed\", \"Sad\"];\r\n\r\nconst SearchBox = () => {\r\n    const [selectedMood, setSelectedMood] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selectedMood) {\r\n            // Perform the search based on the selectedMood\r\n            // You can use the selectedMood to filter or search for specific songs or playlists related to that mood\r\n            // Example: Perform an API request using the selectedMood as a query parameter\r\n            axios\r\n                .get(`https://api.spotify.com/v1/search?q=${selectedMood}&type=track`)\r\n                .then((response) => {\r\n                    setSearchResults(response.data.tracks.items);\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching search results:\", error);\r\n                });\r\n        } else {\r\n            setSearchResults([]);\r\n        }\r\n    }, [selectedMood]);\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter a mood\"\r\n                value={selectedMood}\r\n                onChange={(e) => setSelectedMood(e.target.value)}\r\n            />\r\n\r\n            {selectedMood && (\r\n                <div className=\"dropdown\">\r\n                    {searchResults.map((result) => (\r\n                        <div key={result.id} className=\"dropdown-item\">\r\n                            {result.name}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"mood-categories\">\r\n                {moodCategories.map((mood) => (\r\n                    <button\r\n                        key={mood}\r\n                        onClick={() => setSelectedMood(mood)}\r\n                        className={selectedMood === mood ? \"selected\" : \"\"}\r\n                    >\r\n                        {mood}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC;AAEzE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,IAAIO,YAAY,EAAE;MACd;MACA;MACA;MACAN,KAAK,CACAU,GAAG,CAAE,uCAAsCJ,YAAa,aAAY,CAAC,CACrEK,IAAI,CAAEC,QAAQ,IAAK;QAChBH,gBAAgB,CAACG,QAAQ,CAACC,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC;MAChD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CAAC;IACV,CAAC,MAAM;MACHR,gBAAgB,CAAC,EAAE,CAAC;IACxB;EACJ,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,oBACIJ,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MACIkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEhB,YAAa;MACpBiB,QAAQ,EAAGC,CAAC,IAAKjB,eAAe,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EAEDvB,YAAY,iBACTJ,OAAA;MAAK4B,SAAS,EAAC,UAAU;MAAAX,QAAA,EACpBX,aAAa,CAACuB,GAAG,CAAEC,MAAM,iBACtB9B,OAAA;QAAqB4B,SAAS,EAAC,eAAe;QAAAX,QAAA,EACzCa,MAAM,CAACC;MAAI,GADND,MAAM,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAED3B,OAAA;MAAK4B,SAAS,EAAC,iBAAiB;MAAAX,QAAA,EAC3BhB,cAAc,CAAC4B,GAAG,CAAEI,IAAI,iBACrBjC,OAAA;QAEIkC,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAAC4B,IAAI,CAAE;QACrCL,SAAS,EAAExB,YAAY,KAAK6B,IAAI,GAAG,UAAU,GAAG,EAAG;QAAAhB,QAAA,EAElDgB;MAAI,GAJAA,IAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKL,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtDID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAwDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}